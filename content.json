[{"title":"05篇 AI从零开始 - LangChain学习与实战(2) PromptTemplate降低AI幻觉","date":"2025-02-20T07:00:00.000Z","path":"ailearn/ai-learn05.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 上一节学习了04篇 AI从零开始 - LangChain学习与实战(1) 基础知识，对Langchain有了基础的认知和简单应用，其中我们使用PromptTemplate去实现一次大模型对话。 同时我们在03篇 AI从零开始 - Prompt提示语学习与应用也学习了提示语生成规范，但是在结合 LangChain中我们应该如何利用PromptTemplate提示模板+提示语规范去降低 AI幻觉呢？ AI幻觉, 指人工智能（尤其是大语言模型）生成看似合理但实际错误、虚构或与现实不符的内容的现象。本质是模型在缺乏真实理解能力的情况下，基于统计模式生成的「自信错误」。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"AI学习","slug":"AI学习","permalink":"https://www.qborfy.com/tags/AI%E5%AD%A6%E4%B9%A0/"}]},{"title":"04篇 AI从零开始 - LangChain学习与实战(1) 基础知识","date":"2025-02-18T07:00:00.000Z","path":"ailearn/ai-learn04.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 上一节学习了03篇 AI从零开始 - AI从零开始 - Prompt提示语学习与应用，但是我们发现，Prompt提示语虽然可以让我们得到想要的答案，但是它也有缺点，比如： 只调用单个大模型的对话提示语来生成答案，且无法验证答案的正确性； 大模型是没有记忆能力，且有token上下对话长度限制，无法实现多轮对话； 多步骤推理任务，需要多次调用大模型，效率低下 如果要开发一个完整 LLM应用，开发者需要手动处理： 多组件集成：模型调用、外部数据源、记忆存储、业务逻辑等模块的拼接 上下文管理：对话历史、长期记忆、知识库检索的复杂交互 流程编排：多步骤推理、条件分支、循环控制等逻辑 接下来，我们学习一下LangChain，它是一个基于链式调用的LLM框架，可以让我们更加方便地使用大模型，实现多轮对话、多步骤推理等复杂功能。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"AI学习","slug":"AI学习","permalink":"https://www.qborfy.com/tags/AI%E5%AD%A6%E4%B9%A0/"}]},{"title":"03篇 AI从零开始 - Prompt提示语学习与应用","date":"2025-02-12T07:00:00.000Z","path":"ailearn/ai-learn03.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 前面我们在02篇 AI从零开始 - 部署本地大模型 DeepSeek-R1中学习如何搭建本地大模型，本篇我们学习如何使用Prompt提示语，来让 AI 返回结果更加有符合我们所需要的效果。 1. Prompt提示语基础学习在很多AI学习的文章中，我们都会看到Prompt提示语，那么Prompt提示语是什么，有什么作用呢？ 在OpenAI的官方文档中，对Prompt提示语的解释是： Prompt: A prompt is a short text that is used to guide the model’s output. It can be used to provide context, specify the desired output format, or even to control the model’s behavior.翻译中文则是“Prompt: Prompt是一种用于指导模型输出的短文本。它可以用于提供上下文、指定所需的输出格式，甚至可以用于控制模型的行为。” 我们简单理解一下，Prompt提示语就是，我们给模型输入一段文本，告诉模型，我们想要什么结果，模型就会按照我们的要求，生成我们想要的结果。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"AI学习","slug":"AI学习","permalink":"https://www.qborfy.com/tags/AI%E5%AD%A6%E4%B9%A0/"}]},{"title":"02篇 AI从零开始 - 部署本地大模型 DeepSeek-R1","date":"2025-02-08T07:00:00.000Z","path":"ailearn/ai-learn02.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 之前两篇文章对于 AI 有了初步的了解，但是如何应用 AI 技术呢？去调用 openai 的接口，或者国内的接口都需要付费，而且接口调用次数有限，所以我们需要部署一个本地的大模型，这样就可以自己使用，而且可以自己控制调用次数。正好最近 DeepSeek比较火热，所以我们就在本地尝试部署一下 DeepSeek-R1大模型吧。 1. 了解DeepSeek-R1在开始之前，我们需要先了解一下 DeepSeek, 官网介绍是这么写的： 探索未至之境，DeepSeek-V3 在推理速度上相较历史模型有了大幅提升。在目前大模型主流榜单中，DeepSeek-V3 在开源模型中位列榜首，与世界上最先进的闭源模型不分伯仲。 同时它开源了几个大模型，主要如下： DeepSeek-R1，总参数671B，上下文长度最大支持128K，是在性能对齐 OpenAI-o1 正式版。 DeepSeek-V3，DeepSeek 上一代开源大模型。 因此，作为最新的大模型，DeepSeek-R1 是我们部署的首选。接下来我们继续了解 DeepSeek-R1。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"AI学习","slug":"AI学习","permalink":"https://www.qborfy.com/tags/AI%E5%AD%A6%E4%B9%A0/"}]},{"title":"赚钱学习系列 01篇 - 重新认识自己","date":"2025-02-08T07:00:00.000Z","path":"money/01.html","excerpt":"","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"赚钱学习","slug":"赚钱学习","permalink":"https://www.qborfy.com/tags/%E8%B5%9A%E9%92%B1%E5%AD%A6%E4%B9%A0/"}]},{"title":"01篇 AI从零开始 - 基础知识和环境准备","date":"2025-02-06T07:00:00.000Z","path":"ailearn/ai-learn01.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy AI 基础知识不管学习什么技术，每个技术里面都会包含一些专业术语， 了解这些术语，有助于我们更好的理解技术，以及更好的使用技术。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"AI学习","slug":"AI学习","permalink":"https://www.qborfy.com/tags/AI%E5%AD%A6%E4%B9%A0/"}]},{"title":"RabbitMQ学习","date":"2024-09-06T08:21:13.000Z","path":"test.html","excerpt":"","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"翻译-服务器端请求伪造 (SSRF)","date":"2024-09-06T08:20:08.000Z","path":"today_2024/20240814.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 背景最近在研究SSR，发现很多服务都会用到SSRF，所以就顺便研究了一下SSRF。 下面是一篇从网络上翻译过来的文章， 大家简单参考了解。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"重新认识一下cookie —— samesite+secure解决跨域请求cookie问题","date":"2024-08-13T10:00:01.000Z","path":"today_2024/20240813.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 背景最近在开发微软的Teams应用，在开发过程中遇到了一个跨域请求cookie的问题，具体表现是，当我在Teams应用中登录后，然后通过iframe的方式打开一个第三方网站，第三方网站无法获取到cookie，导致无法登录。这个问题困扰了我很久，最后通过Google找到了解决方案，特此记录一下。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"如何优雅的修改依赖的第三方npm包代码 —— patch-package npm补丁工具","date":"2024-06-13T10:00:01.000Z","path":"today_2024/20240613.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"《思考，快与慢》，人类到底有多理性？","date":"2024-06-10T05:49:34.000Z","path":"study/think-fast-slow.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 思考，快与慢在书中，卡尼曼会带领我们体验一次思维的终极之旅。他认为，我们的大脑有快与慢两种作决定的方式。常用的无意识的“系统1”依赖情感、记忆和经验迅速作出判断，它见闻广博，使我们能够迅速对眼前的情况作出反应。 举个例子： 肚子饿了去点菜，我们点很多余点菜，然后吃了一阵子就后悔了，如果我们慢慢规划去点，发现别人都已经吃完走了。 温馨提醒：本书涉及N多经济学和心理学的专业术语，需要不断查资料去理解其术语的意思，这对经济学、心理学入门有极大的作用。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"}]},{"title":"好工具推荐Automa —— 可视化配置+工作流+自动化执行浏览器插件","date":"2024-05-30T10:00:01.000Z","path":"today_2024/20240531.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"如何优化chrome web页面开了很久卡顿","date":"2024-05-30T10:00:01.000Z","path":"today_2024/20240604.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"Vue2老项目优化打包逻辑","date":"2024-05-23T10:00:01.000Z","path":"today_2024/20240523.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"VSCode远程连接服务器开发","date":"2024-04-29T10:00:01.000Z","path":"today_2024/20240429.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"00篇 AI从零开始 - 前准备知识","date":"2024-04-06T07:00:00.000Z","path":"ailearn/ai-learn00.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 为什么要学习AI知识去年年中总结写过一篇文章 《2023年中总结之如何在互联网裁员浪潮继续前(gou)进(zhu)》，AI发展是必不可缺的，如同马车和汽车的更新迭代一样，作为互联网的程序员，我们有点类似之前的马夫，现在有新的工具，我们也需要跟上时代的脚步，学习AI知识，可以让我们在互联网裁员浪潮中继续前进。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"AI学习","slug":"AI学习","permalink":"https://www.qborfy.com/tags/AI%E5%AD%A6%E4%B9%A0/"}]},{"title":"06篇 AI从零开始 - LangChain学习与实战(3) LCEL工作流编排原理与实战","date":"2024-04-06T07:00:00.000Z","path":"ailearn/ai-learn06.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 上一篇文章我们学习05篇 AI从零开始 - LangChain学习与实战(2) PromptTemplate降低AI幻觉，对 LangChain实际应用有了基本的了解，接下我们会进入 LangChain最重要的一次学习，就是 LangChain工作流编排原理与实战(LCEL), 学了本文基本上后续 LangChain实际开发都可以独立完成，本文内容较多，建议大家收藏，慢慢学习。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"AI学习","slug":"AI学习","permalink":"https://www.qborfy.com/tags/AI%E5%AD%A6%E4%B9%A0/"}]},{"title":"一次性学完RabbitMQ","date":"2024-03-05T10:00:01.000Z","path":"today_2024/20240305.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"2023年度总结——发现自己的今年高光时刻","date":"2023-12-31T14:00:01.000Z","path":"study/2023-end.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 背景时光匆匆，2023年即将结束，新的一年即将到来，每个人都会有自己的年度总结，因此对于我个人而言，2023 年是一个很重要的转折点，不在于物质上有多大的变化，而是在于思维上，在于精神上的转变，不再有过去那种懵懵懂懂，浑浑噩噩的过日子的感觉，上次这种感觉还是在小学 5 年级的一个夜晚，突然懂事的开窍，觉得学习很重要，要好好读书的醒悟。因此接下来这一篇年度总结的灵感来源于：罗振宇老师的【2024年跨年演讲】主题 —— 是什么让我眼前一亮。 因此，2023 年对于国家，对于公司，对于个人，都是非常不容易的一年，疫情刚过去，经济下调，个人面临裁员，很多人负面情绪都积压快爆炸了，因此2023 年对于大多数人来说，其实是积压了很多垃圾情绪的一年，更因为这样子，我们更加应该去发现今年自己的高光时刻，去找到那个让能自己变得骄傲的自己，找到那个自信的自己，从而更加从容的面对未来，面对 2024 年。 温馨提示：本文文字居多，且内容主要偏向于个人总结，如果觉得对自己有用的，请耐心观看。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"}]},{"title":"AI春晚之 2023年openAI 开发者大会","date":"2023-11-08T10:00:01.000Z","path":"ailearn/openai-dev-20231106.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 背景2023-11-06，openAI公司在美国旧金山举办第一届开发者大会，大会内容总结如下： 回顾过去一年发展 推出新产品 GPT4 Turbo GPTs， GPT Store（GPT商店） GPT Builder GPT应用构建工具 Assistants API 助手API","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"AI系列","slug":"AI系列","permalink":"https://www.qborfy.com/tags/AI%E7%B3%BB%E5%88%97/"}]},{"title":"2023年中总结之如何在互联网裁员浪潮继续前(gou)进(zhu)","date":"2023-09-07T10:00:01.000Z","path":"study/2023-middle.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 背景从去年疫情还没解封开始，陆陆续续就传来各种裁员新闻，虽然去年没有波及到我，但是基本上身边的朋友多多少少都几个被牵扯到了，因此我这边很焦虑，从2023年1月1日起，开始重新踏起起点，不断学习，不断更新个人博客，这一篇算是对我今年半年的总结以及复盘。 温馨提示：本文文字居多，且内容主要偏向于个人总结，如果觉得对自己有用的，请耐心观看。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"}]},{"title":"AI信息收集篇","date":"2023-09-06T10:00:01.000Z","path":"ailearn/all-info.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"AI系列","slug":"AI系列","permalink":"https://www.qborfy.com/tags/AI%E7%B3%BB%E5%88%97/"}]},{"title":"低代码平台加载远端组件解决方案(2)——项目实战","date":"2023-09-04T14:00:01.000Z","path":"lowcode/async-component-2.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 背景前阵子搞了一下如何在Vue项目中加载远程的组件，文章为【低代码平台加载远端组件解决方案(1)——defineAsyncComponent】，遗留一些问题，就是如何在项目中实际应用，因为所有的问题都来源自实际项目，所以本文会继续把这个坑填完。 解决思路涉及到项目实战了，解决方案是需要通过wepack或vite构建工具将资源进行打包，然后通过解析文件，进行模拟封装成可以加载的 js函数即可，下面我们以 vite为构建工具进行编译组件文件async/Async.vue","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"},{"name":"低代码","slug":"低代码","permalink":"https://www.qborfy.com/tags/%E4%BD%8E%E4%BB%A3%E7%A0%81/"}]},{"title":"低代码平台加载远端组件解决方案(1)——defineAsyncComponent","date":"2023-08-29T14:00:01.000Z","path":"lowcode/async-component.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 背景最近在做低代码平台项目中遇到一个很容易遇到的问题，具体描述如下： 问题描述：低代码平台依赖的组件库，如果将一个组件库进行融合打包到平台项目中的就会导致平台在渲染页面的时候需要加载完整的组件库，从而导致页面加载了一些大部分页面不需要的组件文件 希望方案：页面使用到哪些组件就去动态加载组件 解决方案： Vue的异步加载组件，Suspense和defineAsyncComponent React的异步加载组件， Suspense和import() 由于低代码项目本身使用的 Vue3 框架，而且 Vue和 React的异步加载组件方案其实差异不多，所以下面以 Vue为主进行介绍。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"},{"name":"低代码","slug":"低代码","permalink":"https://www.qborfy.com/tags/%E4%BD%8E%E4%BB%A3%E7%A0%81/"}]},{"title":"前端架构—— 学习k8s集群管理","date":"2023-08-26T10:00:01.000Z","path":"framework/framework-k8s-study.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"架构系列","slug":"架构系列","permalink":"https://www.qborfy.com/tags/%E6%9E%B6%E6%9E%84%E7%B3%BB%E5%88%97/"}]},{"title":"《思考的框架》，如何做出更好的决策？","date":"2023-08-15T05:00:00.000Z","path":"study/think-framework.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 思考的框架我们绝大部分行为都是建立在我们所理解的知识领域基础之上，所以我们大部分决策都是都是存在盲区，为了做出更好的决策，本书讲述了不同的思维模型，用来让你的大脑在做出决策之前可以通过不同的思维角度去思考。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"}]},{"title":"前端面试100道手写题（8）—— 懒加载","date":"2023-08-12T14:00:00.000Z","path":"face100/8-lazy-load.html","excerpt":"","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端面试","slug":"前端面试","permalink":"https://www.qborfy.com/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"}]},{"title":"前端面试100道手写题（7）—— 循环轮播图","date":"2023-07-31T14:00:00.000Z","path":"face100/7-loop-pic.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 前言循环轮播图，基本上大家用的都是现有组件，如果要让你自己设计实现一个，其实最主要的两个点：循环算法和滚动动画 手写难度：⭐️⭐️ 涉及知识点： 循环播放的思路 CSS 动画，transtion和 transform Web Component 自定义组件","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端面试","slug":"前端面试","permalink":"https://www.qborfy.com/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"}]},{"title":"一次性完整学完搭建PWA项目","date":"2023-07-28T10:00:01.000Z","path":"today/20230301.html","excerpt":"做一个有温度和有干货的技术分享作者 —— Qborfy 背景最近在开发一个简单的个人记录网站，技术栈是使用 Vite + Vue3，由于使用的单台服务器，有时候服务器会被限制带宽，所以平时都会比较访问比较慢。所以想实现一个离线应用，而 PWA 应用则是目前最佳方案。 本文涉及知识点如下： PWA 的概念 Service Worker使用 用构建工具搭建 PWA 应用","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"Hexo博客添加GitHub评论功能","date":"2023-07-17T10:00:01.000Z","path":"today/20230228.html","excerpt":"背景其实从今年开始运营这个博客，我一直想增加一些新的交互功能，如：评论，之前一直有些问题没搞定，现在终于通过 Google 搜索解决问题了， 其实也算是每天学习一些新东西。 解决问题：给 Hexo 博客新增 Github评论功能 为什么选择 Github 呢？是因为 Github 对于偏向开发人员基本上属于一个必注册网站，而我博客的内容又偏向于技术，所以才会采取这个。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"前端面试100道手写题（6）—— 虚拟滚动","date":"2023-07-05T14:00:00.000Z","path":"face100/6-visual-scroll.html","excerpt":"前言虚拟滚动在前端中是一个很常见的解决方案，由于浏览器对于内存的限制，当页面需要展示大量 DOM 节点（如：列表数据超过 10 万）的时候，如果完整渲染整个 DOM 树，当页面数据需要更新重新渲染的时候就会出现滚动卡顿，这个时候就需要虚拟滚动去模拟浏览器原生滚动事件，从而避免这个卡顿情况。 手写难度：⭐️⭐️⭐️ 涉及知识点： 滚动监听事件 wheel/move 事件节流 滚动偏移量 offset 按需渲染计算方案","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端面试","slug":"前端面试","permalink":"https://www.qborfy.com/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"}]},{"title":"前端面试100道手写题（5）—— Router路由","date":"2023-06-20T14:00:00.000Z","path":"face100/5-router-component.html","excerpt":"前言前端路由，大家都使用过，那么有没有想过它是怎么实现的吗？如：Vue-Router 或者 React-Router。或许有个大概印象，但是真正要自己去实现还是没有什么思路，那么这篇文章将完整的实现思路去实现一次。 手写难度：⭐️⭐️⭐️ 涉及知识点： history api 和监听事件 onhashchange 监听事件 Web Component 自定义组件","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端面试","slug":"前端面试","permalink":"https://www.qborfy.com/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"}]},{"title":"前端架构成长之路——微前端系列(二)之qiankun框架实战","date":"2023-06-18T10:00:01.000Z","path":"framework/frontend-microapp-2.html","excerpt":"背景之前有写过专门一篇关于微前端架构的基础知识——《前端架构成长之路——微前端架构理论篇》，但是里面主要讲几个点： 微前端是什么，具体能做些什么 微前端的一些主流框架 微前端拆分项目的一些原则 那么其实对于微前端应用还是有些不太清楚，下面就用微前端架构去对某个古老项目进行框架升级，这其实也是微前端架构主要特性之一，对项目升级的方案之一。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"架构系列","slug":"架构系列","permalink":"https://www.qborfy.com/tags/%E6%9E%B6%E6%9E%84%E7%B3%BB%E5%88%97/"}]},{"title":"前端架构——利用chatgpt成为架构师（1）","date":"2023-05-26T10:00:01.000Z","path":"framework/framework-with-chatgpt-1.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"},{"name":"架构系列","slug":"架构系列","permalink":"https://www.qborfy.com/tags/%E6%9E%B6%E6%9E%84%E7%B3%BB%E5%88%97/"}]},{"title":"前端面试100道手写题（4）—— 深浅拷贝","date":"2023-05-15T14:00:00.000Z","path":"face100/4-deep-clone.html","excerpt":"前言深浅拷贝经典前端面试题，不仅仅只是实现逻辑，更加是对整个Javascript语言的实现背后一套理论，从基础数据类型到原型链一整套知识体系的熟悉程度，下面我们就从简单到困难一一实现。 手写难度：⭐️⭐️⭐️ 涉及知识点： 数据类型在内存空间的存储 原型以及原型链（这是实现拷贝一个重要知识点，如何拷贝自定义的类实例对象） 如何拷贝一个原型对象 如： a = &#123;&#125;; clone(a.__proto__) 数组的判断 日期/正则等其他内置对象的拷贝 函数的拷贝","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端面试","slug":"前端面试","permalink":"https://www.qborfy.com/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"}]},{"title":"前端面试100道手写题（3）—— EventBus","date":"2023-05-06T14:00:00.000Z","path":"face100/3-event-bus.html","excerpt":"前言EventBus作为发布订阅设计模式的经典应用场景，很值得我们去学习研究它的实现原理。 手写难度：⭐️⭐️","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端面试","slug":"前端面试","permalink":"https://www.qborfy.com/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"}]},{"title":"前端面试100道手写题（2）—— throttle与debounce","date":"2023-04-19T14:00:00.000Z","path":"face100/2-throttle-debouce.html","excerpt":"背景前端面试100道手写题第二篇《throttle与debounce》，说一下为什么选这两个，其实大家都有在用，我们先来了解一下两个函数的作用： debounce 防抖，用于减少函数触发的频率，在一个delay时间内，如果触发delay时间归零，直到delay时间到才会触发函数 throttle 节流，用于限制函数触发的频率，每个delay时间间隔，最多只能执行函数一次 选这两个手写的原因其实很简单，就是面试频率高，而且项目实战会经常用到，同时里面还会隐藏一些知识点和目前公共库的一些问题（见文章末尾）。 接下来就让我们开始手写撸代码吧！ 手写难度：⭐️⭐️⭐️","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端面试","slug":"前端面试","permalink":"https://www.qborfy.com/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"}]},{"title":"《高效能人士的7个习惯》，怎么做才能提高做事效率？","date":"2023-04-19T05:00:00.000Z","path":"study/seven-habbit.html","excerpt":"高效能人士的7个习惯不管是工作还是学习，有些人做事的效率很高，而有些做事的效率就很低，那么有什么方式可以提高自己的工作效率，这本书主要就是讲如何去培养自己高效能的习惯，改变自己的做事和思考的方式。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"}]},{"title":"前端面试100道手写题（1）—— 手写Promise实现","date":"2023-04-16T07:00:00.000Z","path":"face100/1-promise-face.html","excerpt":"原因今年的金三银四面试，遇到了很多新的面试八股文，其实心里对手写题或者算法题有一定抵触，因为实际工作中基本上就不会用到这些东西，但是正因为这些基础八股文，才能真正验证一个人对技术有多热爱的程度。也有可能近几年没有对这些基础知识进行巩固，所以干脆一狠心，先立个flag, 准备完成100道手写题。 Promise","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端面试","slug":"前端面试","permalink":"https://www.qborfy.com/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"}]},{"title":"ChatGPT工具收集","date":"2023-04-08T13:51:01.000Z","path":"ideas/20230408.html","excerpt":"chatGPT工具收集 chatgpt-i18n: AI自动翻译i18n.json Github地址： https://github.com/ObservedObserver/chatgpt-i18n","tags":[{"name":"奇思妙想","slug":"奇思妙想","permalink":"https://www.qborfy.com/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"}]},{"title":"工具收集","date":"2023-04-08T13:51:01.000Z","path":"ideas/20230809.html","excerpt":"主要定期收集各种好玩的工具或者库，避免回头忘记。","tags":[{"name":"奇思妙想","slug":"奇思妙想","permalink":"https://www.qborfy.com/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"}]},{"title":"工具收集","date":"2023-04-08T13:51:01.000Z","path":"ideas/20230621.html","excerpt":"","tags":[{"name":"奇思妙想","slug":"奇思妙想","permalink":"https://www.qborfy.com/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"}]},{"title":"如何用vite+vue-next快速开发chrome插件","date":"2023-04-06T14:00:01.000Z","path":"today/20230227.html","excerpt":"背景之前写过一篇文章《从开发chrome插件到插件系统设计》，主要讲述了如何开发一个chrome插件和chrome插件设计，感兴趣的同学可以再去看看。 目前主流web应用都是基于Vue、React等现代框架去开发，Chrome插件本身而言其实也是一个web应用，看它的组成部分popup.html + contentscript + background.js ，只需要在开发的时候调整一下构建脚本基本上就可以利用Vue、React等现代框架去开发了。 接下来，我们就一步步开始实战。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"2023年读书计划","date":"2023-04-03T14:00:00.000Z","path":"study/2023-read-plan.html","excerpt":"2023年读书计划今年给自己的制定的计划，主要读书目标有以下几类： 给自己的创业带来理论帮助 给自己的职业带来成长 给自己的更加开阔的视野 解答一些人生疑惑 提高自己的做事效率 提高自己的表达能力或演讲能力 搭建自己的股市交易系统","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"}]},{"title":"Typescript基础：如何更好的生成Typescript声明文件.d.ts","date":"2023-03-30T10:00:01.000Z","path":"today/20230226.html","excerpt":"背景Typescript已经被前端广泛使用，如果你的项目还没有使用，建议赶紧使用起来，真的会对你的项目有足够的提升： 让你的每个变量都有变量声明 让你的每个方法找到其源头 让你能提前使用一些超前的JavaScript语法，如：注解(装饰器)@controller 等语法糖 但是使用的过程也会带来一些痛苦，比如你要做一个js lib库，如果用Typescript 开发确实可以帮助其他者快速使用，但是如果你没有注意Typescript的声明文件规范，很容易出现以下使用情况： 12345// 会直接从src目录去寻找import &#123; IClient &#125; from &#x27;xxx-lib/src/client.d.ts&#x27;// 而我们所期待的使用是import &#123; IClient&#125; from &#x27;xxx-lib&#x27; 所以我们需要学习一下，如何更好的生成我们的Typescript声明文件。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"MonoRepo实战：pnpm+nx搭建MonoRepo项目","date":"2023-03-29T10:00:01.000Z","path":"today/20230225.html","excerpt":"MonoRepo实战：pnpm+nx搭建MonoRepo项目背景之前有写过几篇关于monorepo的文章，具体如下： 从npm版本依赖到Monorepo大仓项目 从lerna到初步了解和使用Nx(一) 从pnpm工具了解整个npm包核心管理原理 再次复习一下MonoRepo的概念： Monorepo是包含多个不同项目的单一存储库，且不同项目之间具有明确定义的关系。 之前大多数是理论知识，能让我们知道pnpm 和nx 是什么，但是具体要到项目实战就有点懵，不知道从而下手，下面我们就一步步开始搭建pnpm+nx的Monorepo仓库。 PS：这里将会从已有项目中去开始踩坑，这里用的是之前做一个node-gptcommit命令行工具+一个chrome插件，将两个项目放到一个Monorepo仓库去管理。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"从开发chrome插件到插件系统设计","date":"2023-03-22T10:00:01.000Z","path":"today/20230224.html","excerpt":"背景最近ChatGPT的技术概念很火热，我开发了一个node-gptcommit开源项目，主要利用GPT用来自动生成git commit的信息。 但是通过命令行工具来生成preview感觉有点不太友好，因此在想有没有另外一种可能将其变得更加好用，然后想到一个场景： 在合mr的时候，以及代码review，很多git commit 文件，需要一一个看 在这个时刻，自动生成commit信息就显得很有用，因此我的方案就是将node-gptcommit做成chrome插件，然后帮助MR的开发者能够快速了解此次MR的所有内容。 当然仅仅是开发一个chrome插件大家上网随便搜一下就知道怎么开发，因此为了本文更加有干货，需要更加深入的知识，所以本文分为两部分： Chrome插件开发，如何快速开发一个插件 Chrome插件架构设计，了解Chrome插件背后的架构设计，以及前端插件架构体系","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"不要再使用轮询了，请用SSE服务端推送完成页面实时更新","date":"2023-03-17T10:00:01.000Z","path":"today/20230223.html","excerpt":"背景最近开发一个页面碰到一个需求，需要对部分数据需要实时更新状态，面对这样子的场景，我们通常有以下几个方案： 轮询，利用setTimeout定时轮询 WebSocket，利用长链接保持与服务通讯 SSE，服务端推送机制","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"Node冷门知识点—— node.js支持import语法","date":"2023-03-16T11:21:01.000Z","path":"share/nodejs-module.html","excerpt":"js模块化前端主流模块化规范，目前有以下几种： CommonJS， Node.js提出的规范 ECMAScript Module，ESM，由ECMAScript组织提出的JavaScript标准规范 已淘汰的有：CMD、AMD等，再就综合体UMD（支持各种规范的集合体） 因此，主流有两种规范CommonJS和ESM两种规范，但是由于Node.js不支持ESM规范，导致很多时候我们的项目里面并存两种规范的代码，从而出现下面这种情况： 12345// 在node端执行构建的时候const _ = require(&#x27;loadsh&#x27;)// 在浏览器端实现的时候import _ from &#x27;loadsh&#x27;; 这样子开发就很容易出现痛点，往往我们的解决方案就是通过各种构建工具去解决，如：webpack vite，尤其是我们在写项目中写node.js编译脚本，经常需要切换。 但是从Node.js V14+版本后，它开始支持ESM规范啦，你可以直接在Node.js中使用import export等语法了，终于等到这一天😭。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}]},{"title":"《百万富翁快车道》，我们应该如何快速转到一百万呢？","date":"2023-03-14T14:00:00.000Z","path":"study/book-million.html","excerpt":"百万富翁快车道讲述的作者从失业游民到百万富翁的经历的一些过程，可以帮人开阔一些思维模式，从人行道、慢车道、快车道的方式去讲述一个人如何转到一百万。 如果想要快速赚到一百万，这里没有教你实际的方案，但是告诉你一些思维模式，所以我这边简单通过思维导图去进行汇总。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"}]},{"title":"GPT-4都来了，我们还需要刷算法题和背八股文吗？","date":"2023-03-12T10:00:01.000Z","path":"ideas/20230312.html","excerpt":"2023年的面试寒冬从去年到今年各个大厂都在不断裁员，导致今年IT互联网行情很差，很多朋友都缺乏面试机会或者面试不通过。 程序员一旦要开始面试，很多朋友都开始循环以下几个步骤： 刷算法题，如：LeetCode各种困难程度的题目 背诵各种八股文，如：浏览器请求一个URL的完整过程 复习各种冷门知识，如：Promise.race(谁先返回就获取谁的结果，后面直接不处理)或Promise.allSettled(结果为Iterator对象，实现next()) 也许以往这种复习模式还算不错，因为目前大多数面试流程基本上都是会问上述问题，而面试官问这些问题的最终目的是什么： 算法题，主要考的是逻辑思维能力 八股文，主要考的是基础知识是否足够扎实，知识深度是否足够 冷门知识，主要考的是知识广度，你除了目前使用知识点外还能拥有其他知识面 后续一些项目经验讲述，主要目的在于测试你是否真的参与到项目中，但是这个往往都是容易被忽略的点，这个放到后面再讲。 当下最火的IT技术，ChatGPT智能机器人出来后，它不像普通搜索引擎一样，需要去大量的结果去找到自己的答案。而是直接将答案提供给到你，让你可以更加快速实现功能。 如果ChatGPT普及开来，那么面试是否还需要考算法题和八股文吗？ 或者换个问题，当AI技术可以代替绝大部分基础开发工作的时候，面对这种技术变更，作为普通开发者，我们应该如何做技术成长规划呢？","tags":[{"name":"奇思妙想","slug":"奇思妙想","permalink":"https://www.qborfy.com/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"}]},{"title":"可以从ChatGPT学到什么（二）—— 利用AI自动生成git commit信息","date":"2023-03-12T10:00:01.000Z","path":"today/20230221.html","excerpt":"背景自从上一次写完可以从ChatGPT学到什么(一)，简单对ChatGPT有一定了解后，其背后的技术原理是基于OpenAI GPT-3协议去实现的智能对话的。 再加上我看到国外有很多相关基于GPT开发的开源应用，因此萌生了自己动手搞一个，加上之前自己翻译了一篇文章有了GPT-3，再也不用手写commit message，他是基于Rust语言写，想着直接对着他照搬一个到Node.js版本，通过这种小项目实践，我们可以学习到： OpenAI提供了哪些模型算法 不同模型算法分别可以应用到哪些场景 真正调用OpenAI需要注意哪些事项","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"30分钟搞懂Rollup+Typescript构建工程","date":"2023-03-11T10:00:01.000Z","path":"today/20230222.html","excerpt":"背景最近在研究一个ngptcommit命令行工具，然后想通过Rollup+Typescript去编译的时候，发现对Rollup和Typescript的编译配置有点陌生，所以希望通过本文能够对其有个系统的认知。 本文主要是项目编译基础知识，明白其为什么要这么配置，同时能够将项目完整跑起来。 参考项目地址为:node-gptcommit。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"Node冷门知识点——require('node:path')","date":"2023-03-09T11:21:01.000Z","path":"share/node-modules.html","excerpt":"背景今天在看Vite的源码时候，发现有个用法很神奇，代码如下： 12345678import path, &#123; resolve &#125; from &#x27;node:path&#x27;import &#123; fileURLToPath &#125; from &#x27;node:url&#x27;import &#123; readFileSync &#125; from &#x27;node:fs&#x27;const &#123; version &#125; = JSON.parse( readFileSync(new URL(&#x27;../../package.json&#x27;, import.meta.url)).toString(),)... 源码地址在:vite/src/node/cli.ts 因此想要研究一下为什么要用node:path，而不是直接应用 import path from &#39;path&#39;呢？下面就来好好分析一下。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}]},{"title":"从pnpm工具了解整个npm包核心管理原理","date":"2023-03-01T10:00:01.000Z","path":"today/20230219.html","excerpt":"背景今年在github前端领域star上升速度比较主要有以下几个： Svelte, 一个将MVVM架构放到构建应用程序的编译阶段实现的框架，让你开发更少的代码实现更多的功能 Typescript, 几乎所有的前端框架不约而同的支持了Typescript，一个JavaScript的超集，支持变量类型声明 pnpm，一个现代化的npm包管理工具，采用link方式去全局管理包，这是本文介绍的重点。 因此，选一个和我们项目中开发相关的作为一个知识扩展点，应该就是pnpm了。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"实现一个JS引擎竟如此简单","date":"2023-02-27T10:00:01.000Z","path":"today/20230218.html","excerpt":"背景这是很久之前的一个念想，当时为了加深自己对js的理解，明白js引擎是如何工作的。于是从上网找了一个giao-js，感觉还不错，因此想学习一下。 JS引擎之前有篇文章理解React中Fiber架构(一)中有讲到浏览器进程如何渲染网页和执行js代码的，我们再复习一遍。 一个完整的web网页在浏览器显示和交互的进程（chrome为主），需要涉及到线程主要以下几个部分： GUI 渲染线程，负责渲染浏览器界面HTML元素,当界面需要重绘(Repaint)或由于某种操作引发回流(reflow)时,该线程就会执行。 JavaScript引擎线程，JS内核，负责处理Javascript脚本程序。 一直等待着任务队列中任务的到来，然后解析Javascript脚本，运行代码。 定时触发器线程，定时器setInterval与setTimeout所在线程，为什么要单独弄个线程处理定时器？是因为JavaScript引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确 事件触发线程，用来控制事件轮询，JS引擎自己忙不过来，需要浏览器另开线程协助 异步http请求线程，在XMLHttpRequest或fetch在连接后是通过浏览器新开一个线程请求， 将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件放到 JavaScript引擎的处理队列中等待处理。这里需要注意XMLHttpRequest和fetch的区别，fetch是w3c标准化后一个专门提供给开发调用发起http的API接口，XMLHttpRequest是一个非标准化的Http请求对象，主要是可以发起http请求获取XML数据。 针对JS引擎，官方的定义是：","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"前端架构成长之路——微前端架构理论篇","date":"2023-02-26T10:00:01.000Z","path":"framework/frontend-microapp-1.html","excerpt":"背景最近项目开发中使用了qiankun框架去做微前端，我是属于半懂不懂的状态，大概了解过微前端是什么，可以解决什么问题，但是没有并系统的认识和从0实战过。 所以希望通过几篇文章去重新认识微前端这一架构，主要会从几个方面： 是什么，以及为什么会出现 实现原理，以及主流框架 项目实战","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"},{"name":"架构系列","slug":"架构系列","permalink":"https://www.qborfy.com/tags/%E6%9E%B6%E6%9E%84%E7%B3%BB%E5%88%97/"}]},{"title":"前端架构成长之路——Nest.js微服务架构实战","date":"2023-02-26T10:00:01.000Z","path":"framework/frontend-microapp-3.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"},{"name":"架构系列","slug":"架构系列","permalink":"https://www.qborfy.com/tags/%E6%9E%B6%E6%9E%84%E7%B3%BB%E5%88%97/"}]},{"title":"好玩有趣收集系列（二）","date":"2023-02-18T03:51:01.000Z","path":"ideas/20230218.html","excerpt":"今日收集一些好玩有趣的开源api或框架或开源项目 自动生成1000个性化视频通过Shotstack提供的API服务制作不同视频。 ShotStack是一个基于云的视频编辑API。与Adobe Premiere或After Effects等传统桌面视频编辑应用程序不同，ShotStack纯粹是基于代码的–您可以使用代码创建编辑。该API使用使用JSON的REST架构样式来描述应该如何编辑视频。有许多不同语言的SDK可用于与API交互并创建JSON请求。 是否可以利用该api和小程序结合在一起做一些 生日祝福小视频定制服务。","tags":[{"name":"奇思妙想","slug":"奇思妙想","permalink":"https://www.qborfy.com/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"}]},{"title":"创业idea —— 一个小程序利用一句话画一幅画","date":"2023-02-17T03:51:01.000Z","path":"ideas/20230217.html","excerpt":"","tags":[{"name":"奇思妙想","slug":"奇思妙想","permalink":"https://www.qborfy.com/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"}]},{"title":"可以从ChatGPT学到什么(一)","date":"2023-02-16T10:00:01.000Z","path":"today/20230216.html","excerpt":"背景最近chatgpt智能对答火的一塌涂地，就是你找chatgpt咨询，它不仅能理解你的意思，还能给出准确的答案，而且能够从上下文理解你的意思。 简单的说，就不再是之前的智能对答，如果遇到不理解的问题回复【我好像不太理解你的问题】。 更有甚者，利用chatgpt完成论文编写，同时还有帮小孩子写作业、程序员利用它整理某个业务的实现思路，作者利用其帮忙写小说细节等等。 我尝试问了一些常规问题，如下图所示，可以更好的理解chatgpt的能力。 如何以Nest.js框架实现用户登录功能","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"前端自动化UI测试的完整方案","date":"2023-02-15T10:00:01.000Z","path":"today/20230215.html","excerpt":"背景开发公共平台项目，测试资源相对比较少，因此对开发者自身而言，为了维护项目的稳定性，需要对平台做各类测试，即使有测试环境，但是也很容易缺乏测试场景导致带着bug上线的情况。 因此我们需要做完整自动化测试方案，来避免这类常规错误，提高平台的可用性和稳定性。 这里先简单描述自动化测试的分类： 单元测试，验证独立的单元模块代码或函数是否正常工作 集成测试，验证多个单元模块间的协同工作 UI 测试，只针对前端UI部分测试，后端数据采用mock方式 端到端测试，从用户的角度，通过机器来模仿用户在真实浏览器中验证应用交互 快照测试，验证程序的UI变化 接下来我们将根据这些测试类如何在项目中落地完整方案。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"个人技术栈(持续更新)","date":"2023-02-14T14:00:00.000Z","path":"study/front-stack.html","excerpt":"技术栈主要总结个人技术栈，会不停更新，直到部分被淘汰。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"}]},{"title":"创业idea——AI种植与花店","date":"2023-02-14T13:51:01.000Z","path":"ideas/20230214.html","excerpt":"背景此想法源于一个抖音视频，里面有个商业模式，通过摄像头+气味嗅觉捕捉器+液体分析器，可以识别当前植物的状态，且占地面积不大，可以直接树立到家里墙上。大概如下图所示：","tags":[{"name":"奇思妙想","slug":"奇思妙想","permalink":"https://www.qborfy.com/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"}]},{"title":"数据可视化收集","date":"2023-02-14T13:51:01.000Z","path":"ideas/20230215.html","excerpt":"","tags":[{"name":"奇思妙想","slug":"奇思妙想","permalink":"https://www.qborfy.com/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"}]},{"title":"有了GPT-3，再也不用手写commit message(翻译)","date":"2023-02-14T04:51:01.000Z","path":"translate/use-gpt3-auto-git-commit.html","excerpt":"本文翻译的目的，主要想了解GPT3是什么，以及目前大家使用GPT3用来做什么，以及如何开发GPT3。 GPT-3GPT-3是一个很多人或公司正在使用的协助开发的工具，比如：编写脚本、命令行等操作。 GPT-3指的是生成型预训练变换模型3（英语：Generative Pre-trained Transformer 3，简称GPT-3）是一个自回归语言模型，目的是为了使用深度学习生成人类可以理解的自然语言[1]。GPT-3是由在旧金山的人工智能公司OpenAI训练与开发，模型设计基于谷歌开发的变换语言模型。GPT-3的神经网路包含1750亿个参数，为有史以来参数最多的神经网路模型[2]。OpenAI于2020年5月发表GPT-3的论文，在次月为少量公司与开发人团释出应用程式介面的测试版。微软在2020年9月22日宣布取得了GPT-3的独家授权。 —— 维基百科 GPT-3 使用gitcommit,你将不需要花费时间去写git commit。 下面就让学习如何安装 gptcommit，以及享受一下GPT-3帮你写git commit。","tags":[{"name":"翻译文章","slug":"翻译文章","permalink":"https://www.qborfy.com/tags/%E7%BF%BB%E8%AF%91%E6%96%87%E7%AB%A0/"}]},{"title":"Next、Nuxt、Nest的区别(翻译)","date":"2023-02-14T04:51:01.000Z","path":"translate/nuxt-next-nest-diff.html","excerpt":"","tags":[{"name":"翻译文章","slug":"翻译文章","permalink":"https://www.qborfy.com/tags/%E7%BF%BB%E8%AF%91%E6%96%87%E7%AB%A0/"}]},{"title":"Linux如何快速删除大量文件","date":"2023-02-13T10:00:01.000Z","path":"today/20230213.html","excerpt":"背景最近服务器经常遇到磁盘占用空间满的告警，因此跟进定位问题后，发现原来是airflow的有好几个任务每分钟都在产生日志文件，导致磁盘空间占用率暴涨，因此想了几个策略： airflow降低日志文件输出大小，将原来info级别日志跳高到warning 定时清理日志文件 问题问题就出现在清理日志文件，打算先清除一遍，主要清除一个月以前的日志文件，命令为find /data/airflow/ -name &#39;*.log&#39; -and -mtime +30 -type f |xargs rm。 但是等了半天发现日志文件一直无法清除掉，不知道为什么？","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"低代码系列——组件描述DSL","date":"2023-02-12T00:51:01.000Z","path":"lowcode/component.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"低代码","slug":"低代码","permalink":"https://www.qborfy.com/tags/%E4%BD%8E%E4%BB%A3%E7%A0%81/"}]},{"title":"低代码系列——插件系统设计","date":"2023-02-12T00:51:01.000Z","path":"lowcode/plugin.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"低代码","slug":"低代码","permalink":"https://www.qborfy.com/tags/%E4%BD%8E%E4%BB%A3%E7%A0%81/"}]},{"title":"低代码系列——Rust解决性能瓶颈","date":"2023-02-12T00:51:01.000Z","path":"lowcode/use-rust.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"低代码","slug":"低代码","permalink":"https://www.qborfy.com/tags/%E4%BD%8E%E4%BB%A3%E7%A0%81/"}]},{"title":"性能优化我们到底能做些什么东西","date":"2023-02-11T10:00:01.000Z","path":"today/20230305.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"中秋佳节到了，来一起开发一个千里共婵娟XR小程序","date":"2023-02-11T10:00:01.000Z","path":"today/20230304.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"如何实现HTTP2.0","date":"2023-02-11T10:00:01.000Z","path":"today/20230319.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"前端安全-JS原型链污染是怎么回事","date":"2023-02-09T10:00:01.000Z","path":"today/20230209.html","excerpt":"介绍面试题经常会提到一个问题，就是前端安全问题哪些，我们基本上都回答上来以下几个： XSS脚本攻击，利用网站漏洞，注入非法脚本 CSRF跨站请求伪造，攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求 运营商劫持，一般是经过某些运营商DNS网关后，在外层套入iframe，然后实现页面劫持 但是在前端安全中，还有一个问题就是 ：JS原型链污染， 那么是原型链污染怎么回事，请看下面详细介绍。 这里插入一条新闻，新出一个很邪恶的js库叫Evil.js，名字还取得很lodash，其中主要就是利用原型prototype进行重写项目中常用的方法，如： Array.map 有5%概率会丢失最后一个元素， 当数组长度可以被7整除时，Array.includes 永远返回false。 所以学会如何防御项目内被攻击，了解更多JS原型安全知识很重要，起码周末不用调试半天问题，才发现项目中代码被恶意写入。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"css变量了解到项目落地","date":"2023-02-08T10:00:01.000Z","path":"today/20230208.html","excerpt":"背景最近在打开一些网站的，查看其CSS样式的时候，发现如下图： 所以就很好奇，原来现在CSS样式变量已经可以正式投入生产使用了，所以希望能够做个简单了解。 浏览器的兼容性：","tags":[{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"低代码系列——js沙箱设计","date":"2023-02-01T10:00:01.000Z","path":"lowcode/sandbox.html","excerpt":"简介由于自己参与过低代码平台开发，所以希望能把我自己开发低代码中遇到的问题或者一些设计思路进行总结汇总，这是开始写的第一篇，也是比较基础的一篇，关于低代码平台的介绍会放在介绍篇章，这篇就不做过多介绍。 这里为什么会一开始介绍js沙箱设计呢？ 因为低代码平台，会运行用户本身自己编写的业务逻辑代码，这里就需要平台去运行用户写的js代码，但是js代码保存到数据库是一个字符串，那么平台应该怎么运行呢？ 答案是js沙箱，那么如何设计一个沙箱呢？按照低代码平台的需要特性，主要以下几方面： 隔离，隔离是为了保证当前执行代码不影响整个平台的代码 插入，沙箱允许插入平台的内置对象 容错，沙箱内代码即使有错误，也不影响整个平台执行","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"},{"name":"低代码","slug":"低代码","permalink":"https://www.qborfy.com/tags/%E4%BD%8E%E4%BB%A3%E7%A0%81/"}]},{"title":"hexo网站提高SEO优化方法","date":"2023-01-31T10:00:01.000Z","path":"today/20230131.html","excerpt":"主要步骤 添加站点地图 sitemap.xml文件和搜索机器人文件robots.txt 提交站点到搜索引擎(百度和谷歌) hexo针对搜索的优化 添加站点地图添加站点地图 sitemap.xml 添加hexo插件 12npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save 修改_config.yml配置 1234sitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml 搜索机器人文件robots.txt在source目录下新建robots.txt文件，文件内容如下： 123456789101112131415User-agent: *Allow: /Allow: /archives/Allow: /categories/Allow: /tags/ Allow: /resources/ Disallow: /vendors/Disallow: /js/Disallow: /css/Disallow: /fonts/Disallow: /vendors/Disallow: /fancybox/Sitemap: https://hoxis.github.io/sitemap.xmlSitemap: https://hoxis.github.io/baidusitemap.xml","tags":[{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"前端面试题目收集(持续更新)","date":"2023-01-30T14:00:00.000Z","path":"study/face-test.html","excerpt":"主要以下几方面去收集？ 八股文，主要针对理论基础知识 框架类，主要针对React/Vue等 编程题，主要针对各种常用方法进行手动编写 算法题，主要是各类算法题进行汇总","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"}]},{"title":"从null、undefined、NaN的区别了解JS的原型链","date":"2023-01-29T10:00:01.000Z","path":"today/20230129.html","excerpt":"简介由于在面试经常会遇到问题null，undefined，NaN之间的区别，因此想要深入且系统了解一下这些代表空之间的区别，以及它们底层的原理——原型链，同时还要搞明白__proto__和prototype分别是什么。 为了更好系统的理解null，undefined，NaN之间的区别和关系，我们需要从Javascript语言设计底层去理解，为什么一个空值需要设计这么多个。为什么不能像Java，一个null就可以满足？ 我们先简单认识三者： undefined 表示原始值undefined。它是一个 JavaScript 的 原始数据类型 null 特指对象的值未设置。它是 JavaScript 基本类型 之一。 NaN 是一个表示非数字的值 接下来主要从以下两个点去认识null，undefined，NaN之间的区别和关系： 数据类型 typeof === 判断 原型 prototype","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":":has伪类的到来延伸到其他伪元素和伪类的区别","date":"2023-01-28T10:00:01.000Z","path":"today/20230128.html","excerpt":"背景最近从网上看到一个有趣的CSS应用，就是纯用CSS也能是父子树展示，具体效果如下： 目录节点1 节点1 子节点1-1 子节点1-2 节点2 子节点2-1 子节点2-2 然后里面关联到一篇新闻，就是:has伪元素的出现会给CSS带来极大的变动，这是为什么，不就是一个CSS伪元素吗？因此去了解一下，才发现这个伪元素确实不一样，主要有以下几点： 可以选择父级元素， a:has(&gt; img)，包含img元素的a元素 可以选择兄弟元素， h1:has(+ p)，后面为p元素的h1元素 为什么有了它之后，CSS会有大变动，因为以往我们的样式都是直接选择 元素 或者 子元素 或者 后面的元素，如果要选择父元素或前面的元素只能通过命名规范去确定，比如上述两个例子： a:has(&gt; img)，我们只能通过a.has-img类似样式去命名 h1:has(+ p)，只能通过h1.next-p类似样式去命名 大概清楚它能带来的变化，接下来我们来详细了解一下它。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"从0开始学习FlexBox布局","date":"2023-01-24T10:00:01.000Z","path":"today/20230124.html","excerpt":"背景之前研究过一篇《移动端适配总结》，里面主要通过布局不变，改变布局组件元素的大小去适应移动端。但是这种方式对于PC端或者Pad等大屏幕并不适合，所以从想找找看是否有新的方案能否满足跨端自适应布局方式。 目前同时解决PC端和移动端的响应式布局的解决方案以下几种： 通过@media媒体查询去设置不同尺寸的样式 通过Flexbox Grid等现代化布局去做响应式布局","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"低代码系列——介绍","date":"2023-01-22T13:51:01.000Z","path":"lowcode/index.html","excerpt":"系列文章 《低代码系列——js沙箱设计》 《低代码系列——组件描述DSL》(编写中) 低代码是什么低代码，可以理解成开发人员为了快速完成页面开发而搭建一个快速构建页面平台，里面一般包括几个功能点： 无需写代码即可完成页面UI布局 支持页面进行二次代码开发 支持页面或系统级别的导出或部署发布 简单的说，就是快速、稳定的输出开发所需要的页面，减少重复性劳动，提高开发效率。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"低代码","slug":"低代码","permalink":"https://www.qborfy.com/tags/%E4%BD%8E%E4%BB%A3%E7%A0%81/"}]},{"title":"hexo Yilia主题支持搜索功能","date":"2023-01-22T13:51:01.000Z","path":"share/hexo-search.html","excerpt":"介绍当hexo的文章越来越多，依靠标题和tag去搜索有点不够用，因此需要支持搜索功能，hexo查询主要依赖本地索引文件生成，具体步骤如下： 安装插件: npm install --save hexo-generator-search 根目录下的_config.yml中添加如下配置即可","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}]},{"title":"从nest.js中了解IoC和DI的实现","date":"2023-01-22T10:00:01.000Z","path":"today/20230122.html","excerpt":"背景从上一篇《从egg.js转到nest.js》，想对其再深入了解一下，尤其比较好奇Typescript是如何实现IoC和DI，因为在Java的是通过的反射(Spring IoC实现原理)去创建对应的类。因此下文将详细讲解Nest.js中IoC和DI的实现原理。 前置知识在了解实现原理之前有几个知识概念，需要了解一下： IoC和DI JavaScript的Reflect TypeScript的装饰器","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"有趣的工具收集","date":"2023-01-20T13:51:01.000Z","path":"ideas/20230120.html","excerpt":"Deprank js重要性排名一个 JS 工具，按照重要性对本项目的所有脚本进行排序。原理是计算依赖关系，被依赖最多的脚本最重要。 官网：Deprank 例子如下： 123456789| Filename | Lines | Dependents | PageRank |----------------------------------------------------------| fixtures/core.js | 3 | 1 | 0.284098 || fixtures/utils.js | 4 | 3 | 0.268437 || fixtures/user/user.js | 4 | 1 | 0.132253 || fixtures/todo.js | 6 | 1 | 0.089796 || fixtures/user/index.js | 1 | 1 | 0.089796 || fixtures/concepts.js | 4 | 1 | 0.079694 || fixtures/index.js | 4 | 0 | 0.055926 |","tags":[{"name":"奇思妙想","slug":"奇思妙想","permalink":"https://www.qborfy.com/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"}]},{"title":"从lerna到初步了解和使用Nx(一)","date":"2023-01-19T10:00:01.000Z","path":"today/20230119.html","excerpt":"背景自从组内开发架构采用Monorepo大仓项目后，了解一些Monorepo的常用技术，主要采用了lerna框架去做多个子项目统一package.json命令脚本，因此想要了解一下lerna框架，同时也查到lerna的公司同步开发Nx项目，尝试一下它的应用。 想了解Monorepo大仓项目如何设计的可以翻到前往阅读 《从npm版本依赖到Monorepo大仓项目》。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"理解React中Fiber架构(一)","date":"2023-01-17T10:00:01.000Z","path":"today/20230117.html","excerpt":"背景自从React16版本更新了Hook用法，同时引入了新的Fiber架构去重构整个渲染和事件处理过程，React团队引入Hook是为了更好剥离业务代码，让开发能更加友好的抽象代码，达到低耦合的函数组件目的，那么重构Diff算法，引入Fiber架构是为了什么呢？ 其实只是为了能够一个目标快速响应，原先Diff算法时间复杂度为$$ O(n^3)$$ ，最后经过Fiber重构达到了$$ O(n) $$，这里面具体有什么门道，值得我们去深入研究一下。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"从Z-Library到了解IPFS去中心化技术","date":"2023-01-16T10:00:01.000Z","path":"today/20230116.html","excerpt":"背景最近想下载一些免费的电子书，然后找到一个推荐的网站，说是去中心化图书馆，利用去中心化，可以永久有效的，就是Z-Library，因此觉得挺有趣，所以适合简单研究一下。 Z-Library Z-Library（简称Z-Lib，前身为BookFinder）是一个影子图书馆和开放获取文件分享计划，用户可在此一网站上下载期刊文章以及各种类型的书籍。根据Z-Library的说法，截至2022年6月12日，其共收录了10,456,034本书和84,837,646篇文章[1]。Z-Library在其电子书搜索页面上宣称自己是“全球最大的数字图书馆”[2]，并在文章搜索页面上称自身是“全球最大的科学文章存储库”[3]。它原是创世纪图书馆的镜像网站，并从该图书馆获得大部分馆藏。但它的一些馆藏由用户自行上载，并且不为创世纪图书馆所收藏[4]。该平台公开网域已于2022年11月3日遭到美国政府屏蔽。 ZLibrary虽然是一个俄国网站，但它拥有16种语言版本可供选择，下滑至网页末尾，即可切换语言。 访问地址：https://zlib.cydiar.com/访问地址：https://bk.hallowlib.org/ 国内备用网址","tags":[{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"},{"name":"技术探鲜","slug":"技术探鲜","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E6%8E%A2%E9%B2%9C/"}]},{"title":"移动端适配方案总结","date":"2023-01-14T10:00:01.000Z","path":"today/20230111.html","excerpt":"背景由于自己太久没开发移动端的页面，个人觉得移动端开发相比较PC端开发最大的不同，在于需要去适配各种尺寸的手机屏幕，尤其还有1px的问题。 因此需要再次收集一下，除了自己认知(rem适配)以外，是否还有移动端适配的方案吗？ 问题移动端存在几类问题，如下所列： 1px显示过粗问题 手机屏幕出现刘海屏、滴水屏等，如何适配 如何在不同屏幕，显示正确高清图片 meta 的 viewport 值 能否用来适配 rem，vw，vh计算单位的区别 …","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"从egg.js转到nest.js","date":"2023-01-10T10:00:01.000Z","path":"today/20230110.html","excerpt":"背景进入部门工作后，接触到的node.js服务端框架，是egg.js，后面基于扩展增加了很多插件，比如：@Controller @Service等注解，还有针对egg-framework 定制化部门使用的底层framework。 但是，随着时间的迁移，egg已经不太能满足我们的开发效率和开发模式，主要有以下几点： 对typescript支持度不够，这是由于egg.js本身就不是typescript开发 egg.js封装web架构，约定大于编码，如：强制将web应用分级为： controller、service、middleware、extend等，自由度相对比较弱，当你需要定制化开发内容，你需要深入了解egg.js的整个运行原理才能实现 虽然部门内部定制化开发 @Controller @Service等注解，减少路由配置，但是这一块插件还存在一些隐藏规则，需要开发注意 当然egg.js运行的web应用还是比较稳定，而且相关插件生态也比较丰富，只是当egg.js迭代更新速度在2020年后就逐步放缓，更不上变化，我们就需要迎接一些新的框架来满足要求。 框架对比我从近两年听到或者网上收集的，基于Node.js的框架主要有以下几个： 基础框架，基本上还是以express、koa、Fastify.js等为主 egg.js，以MVC为架构的web框架 nest.js，以Ioc 控制反转作为核心概念的web框架，对typescript支持友好 nuxt.js，以Vue.js作为SSR服务端渲染核心的web框架，最新是Nuxt3（以Vue3为核心） next.js，以React.js作为SSR服务端渲染核心的 Meteor.js，full-stack javascript平台，最大的特点是当数据发生改变的时候，所有依赖该数据的地方自动发生相应的改变。 Fastify.js，号称最快的node.js web框架，特点是内置了基于 JSON schema 的 validation 和 serialization，比JSON.stringify还快的json序列化算法，虽然是借助借助第三方库 ajv。 strapi.js，快速生成API接口的web框架，同时实现各种后端所需要的鉴权、权限、文件上传等轮子","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"对CMDB进行一个系统完整认知","date":"2023-01-09T10:00:01.000Z","path":"today/20230109.html","excerpt":"背景最近半年，都在开发部门内部的CMDB平台和申请流程，因此对CMDB有了一定了解，但是又不够系统，所以希望写一篇文章能够系统完整的认知一下CMDB，包括以下几点： 是什么 能做什么和怎么做 优秀方案 未来方向","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"如何在页面展示数学公式之Latex语法","date":"2023-01-08T10:00:01.000Z","path":"today/20230108.html","excerpt":"原因最近在做markdown 算法文章分享，算法肯定会涉及到数学复杂度，比如: $$ O(log_nX) $$ 等数学公式的展示，但是如果写成这样子lognX，估计很难准确表达，因此上网搜索了一下数学表达式在前端页面如何展示的相关技术。 web 数学表达式展示解决方案一般需要在web页面展示数学表达式相关技术，基本上都是在线编辑器，但是markdown也算是一种编辑器语法，所以上网收集了主要以下几种 TeX，前期计算机无法生成数学公式排版或者排版很丑，因此Donald E. Knuth设计了一套排版技术，拥有很多计算机的命令或者技术语言 LaTeX，是一种基于TeX的实现排版系统，准确的基于TeX的应用系统，已经封装很多公式模板，直接套用即可 MathJaX，基于LaTeX实现的JavaScript渲染器， 渲染稍慢，支持更多复杂的表示 KaTeX，也基于LaTeX实现的是一个JavaScript库，对比MathJaX，渲染更快，支持若干简写字符，但是本身支持的范围较小","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"从npm版本依赖到Monorepo大仓项目","date":"2023-01-07T10:00:01.000Z","path":"today/20230107.html","excerpt":"背景前端的发展很快，自从node.js的出现，打开前端新的大门，npm让js有了自己的包管理能力，能够让前端项目工程化，从而能够处理更加复杂的前端项目。 但是随之而来的是，同一个项目的npm依赖越来越多，有些是开源的，有些是自研的，尤其在同一个团队，当你开发一个新的npm包的时候，只是为了服务特定几个项目，但是这几个项目不在你管理范围内，当你需要更新的时候需要通知到他们，有时候会出现版本依赖问题，然后反复沟通和测试，最终达到协调。但是下次更新的时候又再次遇到这个问题，重复一次。 npm依赖npm是什么 npm，Node Package Manager的缩写，也就是“Node的包管理器”。npm（“Node 包管理器”）是 JavaScript 运行时 Node.js 的默认程序包管理器。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"从审批流到bpmn-js入门","date":"2023-01-06T10:00:01.000Z","path":"today/20230106.html","excerpt":"背景公司内部由于需要很多审批地方，一开始采用邮件或者企业微信进行口头审批，一般会抄送相关人员，以达到初步审批的效果，但是随着审批越来越复杂，比如有时候需要驳回或者转接，甚至需要调用其他系统接口继续流程的时候，就很麻烦，因此迫切需要一个工作流去解决审批相关事情。 选型在选型前，我们需要知道工作流是什么？ 是什么工作流就是通过计算机技术对业务流程进行自动化管理。实现多个参与者按照预定的流程去自动执行业务流程。 工作流定义: 通过计算机对业务流程自动化执行管理 再通俗一点，工作流就是通过程序去自动实现平时需要人工操作的流程节点，所以工作流能解决的问题一定是可以被流程化的问题。 然而这一过程被大家统称为业务流程建模，通常对已经存在复杂问题进行模型化的抽象，通过模型来推导解决问题的方案。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"前端快速入门搭建Prometheus监控系统","date":"2023-01-06T10:00:01.000Z","path":"today/20230220.html","excerpt":"背景最近在尝试做性能优化相关事项，其中有个点就是需要对前端页面性能做监控，有了性能数据才能验证自己的性能优化方案是否ok。 目前市面上主流的监控开源方案选择： Promethues ，基于Google的 SoundCloud，2012年开源的被广为适用的监控系统 Zabbix，基于WEB界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案 LightHouse，专用于前端页面性能监控，并可以生成对应报告的 Sentry，提供了检测和解决影响用户体验的错误和其他问题的工具 其中 Promethues 对比其他方案来说功能更加全面，因为它的生态更加完整，支持各类数据进行上报，对后续整个监控平台有更好的可扩展性。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"Svelte尝鲜体验","date":"2023-01-06T10:00:01.000Z","path":"today/20230307.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"Svelte尝鲜体验","date":"2023-01-06T10:00:01.000Z","path":"today/20230308.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"如何基于chatgpt去开发工具","date":"2023-01-06T10:00:01.000Z","path":"today/20230309.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"利用现有语言模型去做智能搜索问答机器人","date":"2023-01-06T10:00:01.000Z","path":"today/20230310.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"如何搭建一套自己的Copilot","date":"2023-01-06T10:00:01.000Z","path":"today/20230303.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"Jamstack尝鲜体验","date":"2023-01-06T10:00:01.000Z","path":"today/20230318.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"appium 自动化测试框架","date":"2023-01-06T10:00:01.000Z","path":"today/20230317.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"利用 ChatGPT 等大语言模型重新搭建智能开发体系","date":"2023-01-06T10:00:01.000Z","path":"today/20230316.html","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"从短视频到短视频思维","date":"2023-01-05T10:00:01.000Z","path":"today/20230105.html","excerpt":"短视频的背景核心人类的需求——记录、表达、分享 背景 智能手机普及 法律法规允许 大数据、AI算法成熟","tags":[{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"},{"name":"短视频","slug":"短视频","permalink":"https://www.qborfy.com/tags/%E7%9F%AD%E8%A7%86%E9%A2%91/"}]},{"title":"从尝试搭建NAS了解各类云硬盘协议（一）","date":"2023-01-04T10:00:01.000Z","path":"today/20230104.html","excerpt":"NAS 是什么NAS，全称Network Attached Storage，中文名： 网络附属存储。 可以理解成是长时间联网的存储设备，比如你有个硬盘，里面存储了一些教学视频，你想要别的地方去访问，比如在手机或者电脑上访问，那么NAS就能够解决你这个问题的解决方案。 NAS可以解决什么场景痛点： 你的照片、视频可以随时上传，大小、题材不限制 访问速度快，尤其在家的时候局域网更快 信息安全，不再担心你的信息被云盘厂商泄露","tags":[{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"},{"name":"动手实战","slug":"动手实战","permalink":"https://www.qborfy.com/tags/%E5%8A%A8%E6%89%8B%E5%AE%9E%E6%88%98/"}]},{"title":"【引导页】功能实现原理分析","date":"2023-01-03T10:00:01.000Z","path":"today/20230103.html","excerpt":"什么是引导页，就是引导用户对一些新功能使用说明UI展示。 遇到这种需求，一般的想法是： 有没有办法可以快速实现 有时间对其背后原理研究一番 快速接入按照常用框架Vue React 原生js进行分类，罗列一些开源比较好的框架使用。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"每日更新","slug":"每日更新","permalink":"https://www.qborfy.com/tags/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"}]},{"title":"浏览器页面卡住定位分析","date":"2022-12-26T13:21:01.000Z","path":"share/page-notwork.html","excerpt":"背景有童鞋在xxx系统页面反馈，遇到在弹出框后整个页面卡住无法使用的情况，属于必现问题。因此需要跟踪定位问题。 问题定位一般在浏览器遇到这种问题，基本上都某段逻辑进入死循环导致浏览器内核处理不过来导致的页面卡住动，这个时候需要使用Chrome开发调试工具进行跟踪定位的。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}]},{"title":"java tomcat服务无缘无故挂掉分析和解决方案","date":"2022-12-17T13:21:01.000Z","path":"share/tomcat-nowork.html","excerpt":"背景最近有同事反应有时候xxx系统有时候会时不时出现服务异常提示，一上机器，发现xxx服务进程不在，重启服务后又恢复了，所以这边就需要去跟进问题。 问题定位java tomcat服务挂掉原因，主要怀疑方向有这几个： 服务器被人重启，导致服务没有起来 错误异常导致程序挂掉 服务器占用内存过高，Linux强制退出程序 其他原因下面就开始逐一排查","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}]},{"title":"React与Jest的单元测试(1)","date":"2019-09-25T14:00:00.000Z","path":"study/react-test1.html","excerpt":"什么是单元测试如果你听说过“测试驱动开发”（TDD：Test-Driven Development），单元测试就不陌生。 单元测试是用来对一个模块、一个函数或者一个类来进行正确性检验的测试工作。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"https://www.qborfy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"}]},{"title":"周二技术周刊 20190924期","date":"2019-09-24T11:23:43.000Z","path":"wx/20190924.html","excerpt":"一、技术知识《降低软件复杂性一般原则和方法》简介： 本篇文章是围绕着“降低复杂性”这个主题展开的，很多重要的结论来源于John Ousterhout的著作《A Philosophy of Software Design》，作者觉得很有共鸣，就做了一些相关话题的延伸、补充了一些实例。虽说是”一般原则“，也不意味着是绝对的真理，整理出来，只是为了引发大家对软件设计的思考。","tags":[{"name":"周二技术周刊","slug":"周二技术周刊","permalink":"https://www.qborfy.com/tags/%E5%91%A8%E4%BA%8C%E6%8A%80%E6%9C%AF%E5%91%A8%E5%88%8A/"}]},{"title":"qborfy周刊 20230815期","date":"2019-09-24T11:23:43.000Z","path":"wx/20230815.html","excerpt":"","tags":[{"name":"qborfy周刊","slug":"qborfy周刊","permalink":"https://www.qborfy.com/tags/qborfy%E5%91%A8%E5%88%8A/"}]},{"title":"奇思妙想录","date":"2019-09-03T13:51:01.000Z","path":"ideas/list.html","excerpt":"2019-09-03一个智能识别语音和输出的白板软件引擎功能描述： 通过人脸标识用户信息，得到当前输出用户 通过语音识别输出用户所描述内容 通过语义归类总结内容 通过流程图或思维导图输出最终白板任务图","tags":[{"name":"奇思妙想","slug":"奇思妙想","permalink":"https://www.qborfy.com/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"}]},{"title":"周二技术周刊 20190731期","date":"2019-07-31T13:03:43.000Z","path":"wx/20190731.html","excerpt":"一、技术知识1.1 蚂蚁金服前端框架和工程化实践作者：阿里-云谦简介：讲述阿里Umi 和 Bigfish框架的发展历史，已经作者技术团队在里面做的哪些事情。","tags":[{"name":"周二技术周刊","slug":"周二技术周刊","permalink":"https://www.qborfy.com/tags/%E5%91%A8%E4%BA%8C%E6%8A%80%E6%9C%AF%E5%91%A8%E5%88%8A/"}]},{"title":"ios12 array.reverse问题","date":"2018-08-19T13:21:01.000Z","path":"share/ios12-array-reverse.html","excerpt":"问题描述iOS12发布之后，在测试中发现一个关于Array.reverse的问题，代码如下： 123456789101112131415161718192021222324&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&quot;&gt; &lt;title&gt;iOS 12 Safari bugs&lt;/title&gt; &lt;script type=&quot;text/javascript&quot;&gt; window.addEventListener(&quot;load&quot;, function () &#123; let arr = [1, 2, 3, 4, 5]; alert(arr.join()); document.querySelector(&quot;button&quot;).addEventListener(&quot;click&quot;, function () &#123; arr.reverse(); &#125;); &#125;); &lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;button&gt;Array.reverse()&lt;/button&gt; &lt;p style=&quot;color:red;&quot;&gt;test: click button and refresh page, code:&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 问题描述：第一次进入刷新alert:1,2,3,4，第二次刷新就一直为alert4,3,2,1。 demo演示未修复的demo已修复的demo","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}]},{"title":"iOS11.3 fastclick.js相关bug","date":"2018-08-04T13:21:01.000Z","path":"share/iOS11-fastclick-js.html","excerpt":"最近遇到奇异的bug,在ios 11.3移动端页面 input输入框第一次触摸可以弹起键盘，后续再触摸需要很难弹起键盘，或者需要在输入框停一会才能弹起键盘。 bug复现条件：一、ios 11.3中app的webview为 UI WebView二、在项目中使用了FastClick.js，页面包括输入框. 发现源头问题：在碰到问题脑子第一想法这不就是click延迟300ms的现象吗？所以就想到是不是FastClick.js导致，注释掉后发现bug现象消失了，代码如下： 12345define([&#x27;zepto&#x27;], function ($) &#123; &#x27;use strict&#x27;; // FastClick.attach(document.body); ...&#125;); 但是这是为什么呢？我们一起看看为什么要加上FastClick，这个库解决了什么问题？","tags":[{"name":"技术分享","slug":"技术分享","permalink":"https://www.qborfy.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}]},{"title":"如何用自定义钩子重构 React 组件","date":"2017-09-03T13:51:01.000Z","path":"translate/wait.html","excerpt":"","tags":[{"name":"翻译文章","slug":"翻译文章","permalink":"https://www.qborfy.com/tags/%E7%BF%BB%E8%AF%91%E6%96%87%E7%AB%A0/"},{"name":"hide","slug":"hide","permalink":"https://www.qborfy.com/tags/hide/"}]}]