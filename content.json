[{"title":"移动端适配UI的全部解决方案对比","date":"2023-01-14T10:00:01.000Z","path":"2023/01/14/today/20220111/","excerpt":"背景由于自己太久没开发移动端的页面，个人觉得移动端开发相比较PC端开发最大的不同，在于需要去适配各种尺寸的手机屏幕，尤其还有1px的问题。 因此需要再次收集一下，除了自己认知(rem适配)以外，是否还有移动端适配的方案吗？ 问题移动端存在几类问题，如下所列： 1px显示过粗问题 手机屏幕出现刘海屏、滴水屏等，如何适配 如何在不同屏幕，显示正确高清图片 meta 的 viewport 值 能否用来适配 rem，vw，vh计算单位的区别 …","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"},{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"}]},{"title":"从egg.js转到nest.js","date":"2023-01-10T10:00:01.000Z","path":"2023/01/10/today/20220110/","excerpt":"背景进入部门工作后，接触到的node.js服务端框架，是egg.js，后面基于扩展增加了很多插件，比如：@Controller @Service等注解，还有针对egg-framework 定制化部门使用的底层framework。 但是，随着时间的迁移，egg已经不太能满足我们的开发效率和开发模式，主要有以下几点： 对typescript支持度不够，这是由于egg.js本身就不是typescript开发 egg.js封装web架构，约定大于编码，如：强制将web应用分级为： controller、service、middleware、extend等，自由度相对比较弱，当你需要定制化开发内容，你需要深入了解egg.js的整个运行原理才能实现 虽然部门内部定制化开发 @Controller @Service等注解，减少路由配置，但是这一块插件还存在一些隐藏规则，需要开发注意 当然egg.js运行的web应用还是比较稳定，而且相关插件生态也比较丰富，只是当egg.js迭代更新速度在2020年后就逐步放缓，更不上变化，我们就需要迎接一些新的框架来满足要求。 框架对比我从近两年听到或者网上收集的，基于Node.js的框架主要有以下几个： 基础框架，基本上还是以express、koa、Fastify.js等为主 egg.js，以MVC为架构的web框架 nest.js，以Ioc 控制反转作为核心概念的web框架，对typescript支持友好 nuxt.js，以Vue.js作为SSR服务端渲染核心的web框架，最新是Nuxt3（以Vue3为核心） next.js，以React.js作为SSR服务端渲染核心的 Meteor.js，full-stack javascript平台，最大的特点是当数据发生改变的时候，所有依赖该数据的地方自动发生相应的改变。 Fastify.js，号称最快的node.js web框架，特点是内置了基于 JSON schema 的 validation 和 serialization，比JSON.stringify还快的json序列化算法，虽然是借助借助第三方库 ajv。 strapi.js，快速生成API接口的web框架，同时实现各种后端所需要的鉴权、权限、文件上传等轮子","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"},{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"}]},{"title":"对CMDB进行一个系统完整认知","date":"2023-01-09T10:00:01.000Z","path":"2023/01/09/today/20220109/","excerpt":"背景最近半年，都在开发部门内部的CMDB平台和申请流程，因此对CMDB有了一定了解，但是又不够系统，所以希望写一篇文章能够系统完整的认知一下CMDB，包括以下几点： 是什么 能做什么和怎么做 优秀方案 未来方向","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"},{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"}]},{"title":"如何在页面展示数学公式之Latex语法","date":"2023-01-08T10:00:01.000Z","path":"2023/01/08/today/20220108/","excerpt":"原因最近在做markdown 算法文章分享，算法肯定会涉及到数学复杂度，比如: $$ O(log_nX) $$ 等数学公式的展示，但是如果写成这样子lognX，估计很难准确表达，因此上网搜索了一下数学表达式在前端页面如何展示的相关技术。 web 数学表达式展示解决方案一般需要在web页面展示数学表达式相关技术，基本上都是在线编辑器，但是markdown也算是一种编辑器语法，所以上网收集了主要以下几种 TeX，前期计算机无法生成数学公式排版或者排版很丑，因此Donald E. Knuth设计了一套排版技术，拥有很多计算机的命令或者技术语言 LaTeX，是一种基于TeX的实现排版系统，准确的基于TeX的应用系统，已经封装很多公式模板，直接套用即可 MathJaX，基于LaTeX实现的JavaScript渲染器， 渲染稍慢，支持更多复杂的表示 KaTeX，也基于LaTeX实现的是一个JavaScript库，对比MathJaX，渲染更快，支持若干简写字符，但是本身支持的范围较小","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"},{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"}]},{"title":"从npm版本依赖到Monorepo大仓项目","date":"2023-01-07T10:00:01.000Z","path":"2023/01/07/today/20220107/","excerpt":"背景前端的发展很快，自从node.js的出现，打开前端新的大门，npm让js有了自己的包管理能力，能够让前端项目工程化，从而能够处理更加复杂的前端项目。 但是随之而来的是，同一个项目的npm依赖越来越多，有些是开源的，有些是自研的，尤其在同一个团队，当你开发一个新的npm包的时候，只是为了服务特定几个项目，但是这几个项目不在你管理范围内，当你需要更新的时候需要通知到他们，有时候会出现版本依赖问题，然后反复沟通和测试，最终达到协调。但是下次更新的时候又再次遇到这个问题，重复一次。 npm依赖npm是什么 npm，Node Package Manager的缩写，也就是“Node的包管理器”。npm（“Node 包管理器”）是 JavaScript 运行时 Node.js 的默认程序包管理器。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"},{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"}]},{"title":"从React学习Fiber架构","date":"2023-01-06T10:00:01.000Z","path":"2023/01/06/today/20220114/","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"},{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"}]},{"title":"从lerna到初步了解和使用Nx","date":"2023-01-06T10:00:01.000Z","path":"2023/01/06/today/20220115/","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"},{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"}]},{"title":"从zlibrary到IPFS搭建去中心化个人网站","date":"2023-01-06T10:00:01.000Z","path":"2023/01/06/today/20220112/","excerpt":"","tags":[{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"},{"name":"技术探鲜","slug":"技术探鲜","permalink":"http://qiubohong.github.io/tags/技术探鲜/"}]},{"title":"前端自动化UI测试的完整方案","date":"2023-01-06T10:00:01.000Z","path":"2023/01/06/today/20220117/","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"},{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"}]},{"title":"从nest.js中了解Ioc和DI","date":"2023-01-06T10:00:01.000Z","path":"2023/01/06/today/20220116/","excerpt":"","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"},{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"}]},{"title":"从审批流到bpmn-js入门","date":"2023-01-06T10:00:01.000Z","path":"2023/01/06/today/20220106/","excerpt":"背景公司内部由于需要很多审批地方，一开始采用邮件或者企业微信进行口头审批，一般会抄送相关人员，以达到初步审批的效果，但是随着审批越来越复杂，比如有时候需要驳回或者转接，甚至需要调用其他系统接口继续流程的时候，就很麻烦，因此迫切需要一个工作流去解决审批相关事情。 选型在选型前，我们需要知道工作流是什么？ 是什么工作流就是通过计算机技术对业务流程进行自动化管理。实现多个参与者按照预定的流程去自动执行业务流程。 工作流定义: 通过计算机对业务流程自动化执行管理 再通俗一点，工作流就是通过程序去自动实现平时需要人工操作的流程节点，所以工作流能解决的问题一定是可以被流程化的问题。 然而这一过程被大家统称为业务流程建模，通常对已经存在复杂问题进行模型化的抽象，通过模型来推导解决问题的方案。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"},{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"}]},{"title":"从短视频到短视频思维","date":"2023-01-05T10:00:01.000Z","path":"2023/01/05/today/20220105/","excerpt":"短视频的背景核心人类的需求——记录、表达、分享 背景 智能手机普及 法律法规允许 大数据、AI算法成熟","tags":[{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"},{"name":"短视频","slug":"短视频","permalink":"http://qiubohong.github.io/tags/短视频/"}]},{"title":"从尝试搭建NAS了解各类云硬盘协议（一）","date":"2023-01-04T10:00:01.000Z","path":"2023/01/04/today/20220104/","excerpt":"NAS 是什么NAS，全称Network Attached Storage，中文名： 网络附属存储。 可以理解成是长时间联网的存储设备，比如你有个硬盘，里面存储了一些教学视频，你想要别的地方去访问，比如在手机或者电脑上访问，那么NAS就能够解决你这个问题的解决方案。 NAS可以解决什么场景痛点： 你的照片、视频可以随时上传，大小、题材不限制 访问速度快，尤其在家的时候局域网更快 信息安全，不再担心你的信息被云盘厂商泄露","tags":[{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"},{"name":"动手实战","slug":"动手实战","permalink":"http://qiubohong.github.io/tags/动手实战/"}]},{"title":"【引导页】功能实现原理分析","date":"2023-01-03T10:00:01.000Z","path":"2023/01/03/today/20220103/","excerpt":"什么是引导页，就是引导用户对一些新功能使用说明UI展示。 遇到这种需求，一般的想法是： 有没有办法可以快速实现 有时间对其背后原理研究一番 快速接入按照常用框架Vue React 原生js进行分类，罗列一些开源比较好的框架使用。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"},{"name":"每日更新","slug":"每日更新","permalink":"http://qiubohong.github.io/tags/每日更新/"}]},{"title":"浏览器页面卡住定位分析","date":"2022-12-26T13:21:01.000Z","path":"2022/12/26/share/page-notwork/","excerpt":"背景有童鞋在xxx系统页面反馈，遇到在弹出框后整个页面卡住无法使用的情况，属于必现问题。因此需要跟踪定位问题。 问题定位一般在浏览器遇到这种问题，基本上都某段逻辑进入死循环导致浏览器内核处理不过来导致的页面卡住动，这个时候需要使用Chrome开发调试工具进行跟踪定位的。","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"}]},{"title":"java tomcat服务无缘无故挂掉分析和解决方案","date":"2022-12-17T13:21:01.000Z","path":"2022/12/17/share/tomcat-nowork/","excerpt":"背景最近有同事反应有时候xxx系统有时候会时不时出现服务异常提示，一上机器，发现xxx服务进程不在，重启服务后又恢复了，所以这边就需要去跟进问题。 问题定位java tomcat服务挂掉原因，主要怀疑方向有这几个： 服务器被人重启，导致服务没有起来 错误异常导致程序挂掉 服务器占用内存过高，Linux强制退出程序 其他原因下面就开始逐一排查","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"}]},{"title":"React与Jest的单元测试(1)","date":"2019-09-25T14:00:00.000Z","path":"2019/09/25/study/react-test1/","excerpt":"什么是单元测试如果你听说过“测试驱动开发”（TDD：Test-Driven Development），单元测试就不陌生。 单元测试是用来对一个模块、一个函数或者一个类来进行正确性检验的测试工作。","tags":[{"name":"学习总结","slug":"学习总结","permalink":"http://qiubohong.github.io/tags/学习总结/"}]},{"title":"周二技术周刊 20190924期","date":"2019-09-24T11:23:43.000Z","path":"2019/09/24/wx/20190924/","excerpt":"一、技术知识《降低软件复杂性一般原则和方法》简介： 本篇文章是围绕着“降低复杂性”这个主题展开的，很多重要的结论来源于John Ousterhout的著作《A Philosophy of Software Design》，作者觉得很有共鸣，就做了一些相关话题的延伸、补充了一些实例。虽说是”一般原则“，也不意味着是绝对的真理，整理出来，只是为了引发大家对软件设计的思考。","tags":[{"name":"周二技术周刊","slug":"周二技术周刊","permalink":"http://qiubohong.github.io/tags/周二技术周刊/"}]},{"title":"奇思妙想录","date":"2019-09-03T13:51:01.000Z","path":"2019/09/03/ideas/list/","excerpt":"2019-09-03一个智能识别语音和输出的白板软件引擎功能描述： 通过人脸标识用户信息，得到当前输出用户 通过语音识别输出用户所描述内容 通过语义归类总结内容 通过流程图或思维导图输出最终白板任务图","tags":[{"name":"奇思妙想","slug":"奇思妙想","permalink":"http://qiubohong.github.io/tags/奇思妙想/"}]},{"title":"周二技术周刊 20190731期","date":"2019-07-31T13:03:43.000Z","path":"2019/07/31/wx/20190731/","excerpt":"一、技术知识1.1 蚂蚁金服前端框架和工程化实践作者：阿里-云谦简介：讲述阿里Umi 和 Bigfish框架的发展历史，已经作者技术团队在里面做的哪些事情。","tags":[{"name":"周二技术周刊","slug":"周二技术周刊","permalink":"http://qiubohong.github.io/tags/周二技术周刊/"}]},{"title":"ios12 array.reverse问题","date":"2018-08-19T13:21:01.000Z","path":"2018/08/19/share/ios12-array-reverse/","excerpt":"问题描述iOS12发布之后，在测试中发现一个关于Array.reverse的问题，代码如下： 123456789101112131415161718192021222324&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&quot;&gt; &lt;title&gt;iOS 12 Safari bugs&lt;/title&gt; &lt;script type=&quot;text/javascript&quot;&gt; window.addEventListener(&quot;load&quot;, function () &#123; let arr = [1, 2, 3, 4, 5]; alert(arr.join()); document.querySelector(&quot;button&quot;).addEventListener(&quot;click&quot;, function () &#123; arr.reverse(); &#125;); &#125;); &lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;button&gt;Array.reverse()&lt;/button&gt; &lt;p style=&quot;color:red;&quot;&gt;test: click button and refresh page, code:&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 问题描述：第一次进入刷新alert:1,2,3,4，第二次刷新就一直为alert4,3,2,1。 demo演示未修复的demo已修复的demo","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"}]},{"title":"iOS11.3 fastclick.js相关bug","date":"2018-08-04T13:21:01.000Z","path":"2018/08/04/share/iOS11-fastclick-js/","excerpt":"最近遇到奇异的bug,在ios 11.3移动端页面 input输入框第一次触摸可以弹起键盘，后续再触摸需要很难弹起键盘，或者需要在输入框停一会才能弹起键盘。 bug复现条件：一、ios 11.3中app的webview为 UI WebView二、在项目中使用了FastClick.js，页面包括输入框. 发现源头问题：在碰到问题脑子第一想法这不就是click延迟300ms的现象吗？所以就想到是不是FastClick.js导致，注释掉后发现bug现象消失了，代码如下： 12345define(['zepto'], function ($) &#123; 'use strict'; // FastClick.attach(document.body); ...&#125;); 但是这是为什么呢？我们一起看看为什么要加上FastClick，这个库解决了什么问题？","tags":[{"name":"技术分享","slug":"技术分享","permalink":"http://qiubohong.github.io/tags/技术分享/"}]},{"title":"正在翻译中","date":"2017-09-03T13:51:01.000Z","path":"2017/09/03/translate/wait/","excerpt":"","tags":[{"name":"翻译文章","slug":"翻译文章","permalink":"http://qiubohong.github.io/tags/翻译文章/"},{"name":"hide","slug":"hide","permalink":"http://qiubohong.github.io/tags/hide/"}]}]